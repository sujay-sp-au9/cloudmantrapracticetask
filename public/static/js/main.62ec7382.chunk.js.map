{"version":3,"sources":["context/index.js","components/UserCreateUpdateModal.js","url.js","components/utils/index.js","components/Add.js","components/datatable/Options.js","components/datatable/Table.js","components/Users.js","components/index.js","index.js"],"names":["React","createContext","Title","Typography","Option","Select","UserCreateUpdateModal","type","form","visible","SetVisible","emailExists","SetExists","clearForm","isEmailValid","checkEmail","handleOnSubmit","email","footer","closeIcon","Fragment","ClearOutlined","onClick","CloseOutlined","style","marginLeft","centered","level","onFinish","layout","Item","onChange","e","target","value","shouldUpdate","label","name","rules","required","message","validator","rule","Promise","resolve","length","reject","placeholder","defaultValue","width","danger","htmlType","block","disabled","isFieldsTouched","getFieldsError","filter","errors","size","url","Axios","method","data","then","res","exists","error","catch","err","test","setFieldsValue","designation","location","dob","Add","useContext","Context","SetState","Form","useForm","useState","margin","getFieldsValue","status","state","users","user","Search","Input","designations","Options","sort","setSort","search","debouncedSearch","SetDebouncedSearch","useEffect","timerID","setTimeout","clearTimeout","marginBottom","marginRight","Group","options","TableComponent","userUpdateEmail","SetEmail","userUpdateId","SetID","columns","title","dataIndex","key","render","Date","toDateString","EditOutlined","_id","moment","DeleteOutlined","color","userElem","maxWidth","overflow","pagination","position","dataSource","Array","isArray","Users","Table","App","URL","forEach","id","Provider","ReactDOM","document","getElementById"],"mappings":"uPAEeA,MAAMC,gB,8FCUbC,EAAUC,IAAVD,MACAE,EAAWC,IAAXD,OA4IOE,EA1Ie,SAAC,GAYxB,IAXLC,EAWI,EAXJA,KACAC,EAUI,EAVJA,KACAC,EASI,EATJA,QACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,UACAC,EAKI,EALJA,UACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,eACAC,EACI,EADJA,MAEA,OACE,eAAC,IAAD,CACEC,OAAQ,KACRT,QAASA,EACTU,UACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CAAeC,QAAS,kBAAMT,EAAUL,MACxC,cAACe,EAAA,EAAD,CACEC,MAAO,CAAEC,WAAY,OACrBH,QAAS,kBAAMZ,GAAW,SAIhCgB,UAAQ,EAZV,UAcE,cAACxB,EAAD,CAAOyB,MAAO,EAAd,sBACA,eAAC,IAAD,CAAMnB,KAAMA,EAAMoB,SAAUZ,EAAgBa,OAAO,WAAnD,UACE,cAAC,IAAKC,KAAN,CACEC,SAAU,SAACC,GACLlB,EAAakB,EAAEC,OAAOC,SACX,WAAT3B,EACIU,IAAUe,EAAEC,OAAOC,MACvBnB,EAAWiB,EAAEC,OAAOC,MAAOtB,GAE3BA,GAAU,GAGZG,EAAWiB,EAAEC,OAAOC,MAAOtB,KAIjCuB,cAAc,EACdC,MAAM,WACNC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,iBAAO,CACLC,UADK,SACKC,EAAMR,GACd,OAAIpB,EAAaoB,GACRS,QAAQC,UACNV,EAAMW,OAAS,EACjBF,QAAQG,OAAO,kBAEfH,QAAQG,aA7BzB,SAmCE,cAAC,IAAD,CAAOC,YAAY,aAErB,cAAC,IAAKjB,KAAN,CACEM,MAAM,cACNC,KAAK,cACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,gCAHrC,SAKE,eAAC,IAAD,CAAQQ,aAAc,KAAMxB,MAAO,CAAEyB,MAAO,QAA5C,UACE,cAAC7C,EAAD,CAAQ8B,MAAM,MAAd,iBACA,cAAC9B,EAAD,CAAQ8B,MAAM,MAAd,iBACA,cAAC9B,EAAD,CAAQ8B,MAAM,OAAd,kBACA,cAAC9B,EAAD,CAAQ8B,MAAM,OAAd,uBAGJ,cAAC,IAAKJ,KAAN,CACEM,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,iCANf,SAUE,cAAC,IAAD,CAAOO,YAAY,eAErB,cAAC,IAAKjB,KAAN,CACEM,MAAM,gBACNC,KAAK,MACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sCANf,SAUE,cAAC,IAAD,MAEF,cAAC,IAAKV,KAAN,UACE,cAAC,IAAD,CACEN,MAAO,CAAEyB,MAAO,QAChB3B,QAAS,kBAAMZ,GAAW,IAC1BH,KAAK,UACL2C,QAAM,EAJR,sBASF,cAAC,IAAKpB,KAAN,CAAWK,cAAc,EAAzB,SACG,WACC,OACE,cAAC,IAAD,CACE5B,KAAK,UACL4C,SAAS,SACTC,OAAK,EACLC,SACY,QAAT9C,IAAkBC,EAAK8C,iBAAgB,IACxC9C,EAAK+C,iBAAiBC,QAAO,qBAAGC,OAAoBZ,UACjDA,QACHlC,EAEF+C,KAAK,QAVP,SAYGnD,cC/IJoD,EAAM,qCCKb5C,EAAa,SAACmB,EAAOtB,GACzBgD,IAAM,CACJC,OAAQ,OACRF,IAAI,GAAD,OAAKA,EAAL,cACHG,KAAM,CAAE7C,MAAOiB,KAEd6B,MAAK,SAACC,GACAA,EAAIF,KAAKG,QAGZzB,IAAQ0B,MAAM,wBAAyB,CAAC,IACxCtD,GAAU,IAHVA,GAAU,MAMbuD,OAAM,SAACC,GAAD,OAAS5B,IAAQ0B,MAAME,EAAI5B,aAGhC1B,EAAe,SAACoB,GAAD,MACnB,uEAAuEmC,KACrEnC,IAGErB,EAAY,SAACL,GACjBA,EAAK8D,eAAe,CAClBrD,MAAO,GACPsD,YAAa,KACbC,SAAU,GACVC,IAAK,QCyBMC,EA/CH,WAAO,IAAD,EACK1E,IAAM2E,WAAWC,GAA7BC,EADO,sBAEDC,IAAKC,UAAbvE,EAFS,sBAGcR,IAAMgF,UAAS,GAH7B,mBAGTvE,EAHS,KAGAC,EAHA,OAIiBV,IAAMgF,UAAS,GAJhC,mBAITrE,EAJS,KAIIC,EAJJ,KA0BhB,OACE,eAAC,IAAMQ,SAAP,WACE,cAAC,IAAD,CAAQI,MAAO,CAAEyD,OAAQ,SAAW3D,QAAS,kBAAMZ,GAAW,IAA9D,sBAGA,cAAC,EAAD,CACEH,KAAK,MACLS,eA5BiB,WACrB,IAAM8C,EAAOtD,EAAK0E,iBAClBrE,EAAUL,GACVoD,IAAM,CACJC,OAAQ,OACRF,IAAI,GAAD,OAAKA,EAAL,QACHG,SAECC,MAAK,SAACC,GACc,MAAfA,EAAImB,SACNN,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEC,MAAM,CAAErB,EAAIF,KAAKwB,MAAZ,mBAAqBF,EAAMC,aAGpC3E,GAAW,OAGdyD,OAAM,SAACC,GAAD,OAAS5B,IAAQ0B,MAAME,EAAI5B,aAUhChC,KAAMA,EACNC,QAASA,EACTC,WAAYA,EACZC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,aAAcA,EACdC,WAAYA,Q,kBC/CZwE,EAAWC,IAAXD,OAEFE,EAAe,CAAC,MAAO,OAAQ,MAAO,QAwE7BC,EAtEC,WAAO,IAAD,EACI1F,IAAMgF,SAAS,GADnB,mBACbW,EADa,KACPC,EADO,OAEM5F,IAAM2E,WAAWC,GAFvB,mBAEbQ,EAFa,KAENP,EAFM,OAG0B7E,IAAMgF,SAASI,EAAMS,QAH/C,mBAGbC,EAHa,KAGIC,EAHJ,KAkBpB,OAdA/F,IAAMgG,WAAU,WACd,IAAMC,EAAUC,YAAW,WACzBrB,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEES,OAAQC,SAGX,KACH,OAAO,WACLK,aAAaF,MAGd,CAACH,IAEF,gCACE,cAACP,EAAD,CACE/D,MAAO,CAAE4E,aAAc,OACvBrD,YAAY,qBACZhB,SAAU,SAACC,GAAD,OAAO+D,EAAmB/D,EAAEC,OAAOC,UAE/C,sBAAKV,MAAO,CAAE4E,aAAc,OAA5B,UACE,sBAAM5E,MAAO,CAAE6E,YAAa,OAA5B,mCACA,cAAC,IAASC,MAAV,CACEC,QAASd,EACT1D,SAAU,SAACwC,GAAD,OACRM,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEb,yBAMV,sBAAK/C,MAAO,CAAE4E,aAAc,OAA5B,UACE,sBAAM5E,MAAO,CAAE6E,YAAa,OAA5B,qBACA,eAAC,IAAMC,MAAP,CACEvE,SAAU,SAACC,GACT4D,EAAQ5D,EAAEC,OAAOC,OACM,IAAnBF,EAAEC,OAAOC,MACX2C,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEX,IAAK,OAGmB,IAAnBzC,EAAEC,OAAOC,OAClB2C,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEX,KAAM,QAKdvC,MAAOyD,EAnBT,UAqBE,cAAC,IAAD,CAAOzD,MAAO,EAAd,sBACA,cAAC,IAAD,CAAOA,MAAO,EAAd,mC,qDCsEKsE,EAjIQ,WAAO,IAAD,EACDxG,IAAM2E,WAAWC,GADhB,mBACpBQ,EADoB,KACbP,EADa,KAEnBQ,EAAUD,EAAVC,MAFmB,EAGZP,IAAKC,UAAbvE,EAHoB,sBAIGwE,oBAAS,GAJZ,mBAIpBvE,EAJoB,KAIXC,EAJW,OAKMsE,oBAAS,GALf,mBAKpBrE,EALoB,KAKPC,EALO,OAMSoE,mBAAS,IANlB,mBAMpByB,EANoB,KAMHC,EANG,OAOG1B,mBAAS,IAPZ,mBAOpB2B,EAPoB,KAONC,EAPM,KAqCrBC,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,QACXC,IAAK,QAEP,CACEF,MAAO,cACPC,UAAW,cACXC,IAAK,eAEP,CACEF,MAAO,UACPC,UAAW,WACXC,IAAK,WAEP,CACEF,MAAO,MACPC,UAAW,MACXC,IAAK,MACLC,OAAQ,SAACxC,GAAD,OAAS,IAAIyC,KAAKzC,GAAK0C,iBAEjC,CACEF,OAAQ,SAAC3B,GACP,OACE,eAAC,IAAD,CAAO5B,KAAK,SAAZ,UACE,cAAC0D,EAAA,EAAD,CACE9F,QAAS,WAAO,IACNL,EAA2CqE,EAA3CrE,MAAOsD,EAAoCe,EAApCf,YAAaC,EAAuBc,EAAvBd,SAAUC,EAAaa,EAAbb,IAAK4C,EAAQ/B,EAAR+B,IAC3C7G,EAAK8D,eAAe,CAClBrD,QACAsD,YAAa,CAACA,GACdC,WACAC,IAAK6C,IAAO7C,KAEdmC,EAAMS,GACNX,EAASzF,GACTP,GAAW,MAGf,cAAC6G,EAAA,EAAD,CACE/F,MAAO,CAAEgG,MAAO,OAChBlG,QAAS,WACPsC,IAAM,CACJC,OAAQ,SACRF,IAAI,GAAD,OAAKA,EAAL,qBAAqB2B,EAAK+B,OAE5BtD,MACC,SAACC,GAAD,OACiB,MAAfA,EAAImB,QACJN,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEC,MAAOD,EAAMC,MAAM7B,QACjB,SAACiE,GAAD,QAAgBA,EAASJ,MAAQ/B,EAAK+B,gBAK/ClD,OAAM,SAACC,GAAD,OAAS5B,IAAQ0B,MAAME,EAAI5B,qBAQlD,OACE,sBAAKhB,MAAO,CAAEkG,SAAU,QAASC,SAAU,QAA3C,UACE,cAAC,IAAD,CACEC,WAAY,CAAEC,SAAU,CAAC,eACzBrG,MAAO,CAAEkG,SAAU,eACnBI,WAAYzC,EACZwB,QAASA,IAEX,cAAC,EAAD,CACEtG,KAAK,SACLS,eA1GiB,WACrB,IAAM8C,EAAOtD,EAAK0E,iBACd6C,MAAMC,QAAQlE,EAAKS,eACrBT,EAAKS,YAAcT,EAAKS,YAAY,IAEtC1D,EAAUL,GACVoD,IAAM,CACJC,OAAQ,QACRF,IAAI,GAAD,OAAKA,EAAL,qBAAqBgD,GACxB7C,SAECC,MAAK,SAACC,GACc,MAAfA,EAAImB,SACNN,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEEC,MAAM,CACJrB,EAAIF,KAAKwB,MADN,mBAEAF,EAAMC,MAAM7B,QACb,SAACiE,GAAD,QAAgBA,EAASJ,MAAQV,aAKzCjG,GAAW,OAGdyD,OAAM,SAACC,GAAD,OAAS5B,IAAQ0B,MAAME,EAAI5B,aAgFhChC,KAAMA,EACNC,QAASA,EACTC,WAAYA,EACZC,YAAaA,EACbC,UAAWA,EACXC,UAAWA,EACXC,aAAcA,EACdC,WAAYA,EACZE,MAAOwF,QC1HAwB,EATD,WACZ,OACE,gCACE,cAAC,EAAD,IACA,cAACC,EAAD,QC2CSC,EAzCH,WAAO,IAAD,EACUnI,IAAMgF,SAAS,CACvCa,OAAQ,GACRtB,YAAa,GACbE,KAAM,EACNY,MAAO,KALO,mBACTD,EADS,KACFP,EADE,KA+BhB,OAxBA7E,IAAMgG,WAAU,WACd,IAAIoC,EAAG,UAAMzE,EAAN,QACHyB,EAAMS,SACRuC,GAAG,WAAQhD,EAAMS,SAEfT,EAAMb,YAAY1B,OAAS,GAC7BuF,GAAO,IACPhD,EAAMb,YAAY8D,SAChB,SAAC9D,GAAD,OAAkB6D,GAAG,sBAAmB7D,EAAnB,QAEvB6D,GAAG,gBAA2B,IAAfhD,EAAMX,IAAa,IAAM,GAArC,QAEH2D,GAAG,iBAA4B,IAAfhD,EAAMX,IAAa,IAAM,GAAtC,OAELb,IAAM,CAAEC,OAAQ,MAAOF,IAAKyE,IACzBrE,MAAK,SAACC,GACc,MAAfA,EAAImB,QACNN,GAAS,SAACO,GACR,OAAO,2BAAKA,GAAZ,IAAmBC,MAAOrB,EAAIF,KAAKuB,cAIxClB,OAAM,SAACC,GAAD,OAAS5B,IAAQ0B,MAAME,EAAI5B,cACnC,CAAC4C,EAAMb,YAAaa,EAAMX,IAAKW,EAAMS,SAEtC,qBAAKyC,GAAG,MAAR,SACE,eAAC,EAAQC,SAAT,CAAkBrG,MAAO,CAACkD,EAAOP,GAAjC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UC1CR2D,IAASvB,OAAO,cAAC,EAAD,IAASwB,SAASC,eAAe,W","file":"static/js/main.62ec7382.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext();\n","import React from \"react\";\nimport {\n  Modal,\n  Typography,\n  Button,\n  Form,\n  Input,\n  Select,\n  DatePicker,\n} from \"antd\";\nimport { CloseOutlined, ClearOutlined } from \"@ant-design/icons\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nconst UserCreateUpdateModal = ({\n  type,\n  form,\n  visible,\n  SetVisible,\n  emailExists,\n  SetExists,\n  clearForm,\n  isEmailValid,\n  checkEmail,\n  handleOnSubmit,\n  email,\n}) => {\n  return (\n    <Modal\n      footer={null}\n      visible={visible}\n      closeIcon={\n        <React.Fragment>\n          <ClearOutlined onClick={() => clearForm(form)} />\n          <CloseOutlined\n            style={{ marginLeft: \"1vw\" }}\n            onClick={() => SetVisible(false)}\n          />\n        </React.Fragment>\n      }\n      centered\n    >\n      <Title level={3}>Add user</Title>\n      <Form form={form} onFinish={handleOnSubmit} layout=\"vertical\">\n        <Form.Item\n          onChange={(e) => {\n            if (isEmailValid(e.target.value)) {\n              if (type === \"Update\") {\n                if (!(email === e.target.value)) {\n                  checkEmail(e.target.value, SetExists);\n                } else {\n                  SetExists(false);\n                }\n              } else {\n                checkEmail(e.target.value, SetExists);\n              }\n            }\n          }}\n          shouldUpdate={true}\n          label=\"Username\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please Enter your E-mail\",\n            },\n            () => ({\n              validator(rule, value) {\n                if (isEmailValid(value)) {\n                  return Promise.resolve();\n                } else if (value.length > 0) {\n                  return Promise.reject(\"Invalid E-mail\");\n                } else {\n                  return Promise.reject();\n                }\n              },\n            }),\n          ]}\n        >\n          <Input placeholder=\"E-mail\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Designation\"\n          name=\"designation\"\n          rules={[{ required: true, message: \"Please Select a Designation\" }]}\n        >\n          <Select defaultValue={null} style={{ width: \"100%\" }}>\n            <Option value=\"SDE\">SDE</Option>\n            <Option value=\"MGR\">MGR</Option>\n            <Option value=\"SSDE\">SSDE</Option>\n            <Option value=\"SMGR\">SMGR</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"Location\"\n          name=\"location\"\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your location\",\n            },\n          ]}\n        >\n          <Input placeholder=\"Location\" />\n        </Form.Item>\n        <Form.Item\n          label=\"Date of birth\"\n          name=\"dob\"\n          rules={[\n            {\n              required: true,\n              message: \"Please confirm your date of birth\",\n            },\n          ]}\n        >\n          <DatePicker />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={() => SetVisible(false)}\n            type=\"primary\"\n            danger\n          >\n            Cancel\n          </Button>\n        </Form.Item>\n        <Form.Item shouldUpdate={true}>\n          {() => {\n            return (\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                block\n                disabled={\n                  (type === \"Add\" ? !form.isFieldsTouched(true) : false) ||\n                  form.getFieldsError().filter(({ errors }) => errors.length)\n                    .length ||\n                  emailExists\n                }\n                size=\"large\"\n              >\n                {type}\n              </Button>\n            );\n          }}\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default UserCreateUpdateModal;\n","export const url = \"http://localhost:3001/api/v1/users\";\n","import Axios from \"axios\";\nimport { message } from \"antd\";\n\nimport { url } from \"../../url\";\n\nconst checkEmail = (value, SetExists) => {\n  Axios({\n    method: \"POST\",\n    url: `${url}/add/email`,\n    data: { email: value },\n  })\n    .then((res) => {\n      if (!res.data.exists) {\n        SetExists(false);\n      } else {\n        message.error(\"E-mail already exists\", [5]);\n        SetExists(true);\n      }\n    })\n    .catch((err) => message.error(err.message));\n};\n\nconst isEmailValid = (value) =>\n  /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n    value\n  );\n\nconst clearForm = (form) => {\n  form.setFieldsValue({\n    email: \"\",\n    designation: null,\n    location: \"\",\n    dob: null,\n  });\n};\n\nexport { checkEmail, isEmailValid, clearForm };\n","import React from \"react\";\nimport { Button, Form, message } from \"antd\";\nimport Axios from \"axios\";\nimport Context from \"../context\";\n\nimport UserCreateUpdateModal from \"./UserCreateUpdateModal\";\n\nimport { url } from \"../url\";\nimport { checkEmail, isEmailValid, clearForm } from \"./utils\";\n\nconst Add = () => {\n  const [, SetState] = React.useContext(Context);\n  const [form] = Form.useForm();\n  const [visible, SetVisible] = React.useState(false);\n  const [emailExists, SetExists] = React.useState(true);\n  const handleOnSubmit = () => {\n    const data = form.getFieldsValue();\n    clearForm(form);\n    Axios({\n      method: \"POST\",\n      url: `${url}/add`,\n      data,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          SetState((state) => {\n            return {\n              ...state,\n              users: [res.data.user, ...state.users],\n            };\n          });\n          SetVisible(false);\n        }\n      })\n      .catch((err) => message.error(err.message));\n  };\n  return (\n    <React.Fragment>\n      <Button style={{ margin: \"2vh 0\" }} onClick={() => SetVisible(true)}>\n        Add User\n      </Button>\n      <UserCreateUpdateModal\n        type=\"Add\"\n        handleOnSubmit={handleOnSubmit}\n        form={form}\n        visible={visible}\n        SetVisible={SetVisible}\n        emailExists={emailExists}\n        SetExists={SetExists}\n        clearForm={clearForm}\n        isEmailValid={isEmailValid}\n        checkEmail={checkEmail}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Add;\n","import React from \"react\";\nimport { Input, Checkbox, Radio } from \"antd\";\nimport Context from \"../../context\";\n\nconst { Search } = Input;\n\nconst designations = [\"SDE\", \"SSDE\", \"MGR\", \"SMGR\"];\n\nconst Options = () => {\n  const [sort, setSort] = React.useState(1);\n  const [state, SetState] = React.useContext(Context);\n  const [debouncedSearch, SetDebouncedSearch] = React.useState(state.search);\n  React.useEffect(() => {\n    const timerID = setTimeout(() => {\n      SetState((state) => {\n        return {\n          ...state,\n          search: debouncedSearch,\n        };\n      });\n    }, 1000);\n    return () => {\n      clearTimeout(timerID);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debouncedSearch]);\n  return (\n    <div>\n      <Search\n        style={{ marginBottom: \"1vh\" }}\n        placeholder=\"Search by username\"\n        onChange={(e) => SetDebouncedSearch(e.target.value)}\n      />\n      <div style={{ marginBottom: \"1vh\" }}>\n        <span style={{ marginRight: \"1vw\" }}>Filter by designation</span>\n        <Checkbox.Group\n          options={designations}\n          onChange={(designation) =>\n            SetState((state) => {\n              return {\n                ...state,\n                designation,\n              };\n            })\n          }\n        />\n      </div>\n      <div style={{ marginBottom: \"1vh\" }}>\n        <span style={{ marginRight: \"1vw\" }}>Sort by</span>\n        <Radio.Group\n          onChange={(e) => {\n            setSort(e.target.value);\n            if (e.target.value === 2) {\n              SetState((state) => {\n                return {\n                  ...state,\n                  dob: 1,\n                };\n              });\n            } else if (e.target.value === 1) {\n              SetState((state) => {\n                return {\n                  ...state,\n                  dob: -1,\n                };\n              });\n            }\n          }}\n          value={sort}\n        >\n          <Radio value={1}>Youngest</Radio>\n          <Radio value={2}>Experienced</Radio>\n        </Radio.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default Options;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nimport { Table, Space, message, Form } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport Context from \"../../context\";\n\nimport UserCreateUpdateModal from \"../UserCreateUpdateModal\";\n\nimport { url } from \"../../url\";\nimport { checkEmail, isEmailValid, clearForm } from \"../utils\";\n\nconst TableComponent = () => {\n  const [state, SetState] = React.useContext(Context);\n  const { users } = state;\n  const [form] = Form.useForm();\n  const [visible, SetVisible] = useState(false);\n  const [emailExists, SetExists] = useState(false);\n  const [userUpdateEmail, SetEmail] = useState(\"\");\n  const [userUpdateId, SetID] = useState(\"\");\n  const handleOnSubmit = () => {\n    const data = form.getFieldsValue();\n    if (Array.isArray(data.designation)) {\n      data.designation = data.designation[0];\n    }\n    clearForm(form);\n    Axios({\n      method: \"PATCH\",\n      url: `${url}/all/user/${userUpdateId}`,\n      data,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          SetState((state) => {\n            return {\n              ...state,\n              users: [\n                res.data.user,\n                ...state.users.filter(\n                  (userElem) => !(userElem._id === userUpdateId)\n                ),\n              ],\n            };\n          });\n          SetVisible(false);\n        }\n      })\n      .catch((err) => message.error(err.message));\n  };\n  const columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"email\",\n      key: \"name\",\n    },\n    {\n      title: \"Designation\",\n      dataIndex: \"designation\",\n      key: \"designation\",\n    },\n    {\n      title: \"Address\",\n      dataIndex: \"location\",\n      key: \"address\",\n    },\n    {\n      title: \"DOB\",\n      dataIndex: \"dob\",\n      key: \"dob\",\n      render: (dob) => new Date(dob).toDateString(),\n    },\n    {\n      render: (user) => {\n        return (\n          <Space size=\"middle\">\n            <EditOutlined\n              onClick={() => {\n                const { email, designation, location, dob, _id } = user;\n                form.setFieldsValue({\n                  email,\n                  designation: [designation],\n                  location,\n                  dob: moment(dob),\n                });\n                SetID(_id);\n                SetEmail(email);\n                SetVisible(true);\n              }}\n            />\n            <DeleteOutlined\n              style={{ color: \"red\" }}\n              onClick={() => {\n                Axios({\n                  method: \"DELETE\",\n                  url: `${url}/all/user/${user._id}`,\n                })\n                  .then(\n                    (res) =>\n                      res.status === 200 &&\n                      SetState((state) => {\n                        return {\n                          ...state,\n                          users: state.users.filter(\n                            (userElem) => !(userElem._id === user._id)\n                          ),\n                        };\n                      })\n                  )\n                  .catch((err) => message.error(err.message));\n              }}\n            />\n          </Space>\n        );\n      },\n    },\n  ];\n  return (\n    <div style={{ maxWidth: \"100vw\", overflow: \"auto\" }}>\n      <Table\n        pagination={{ position: [\"bottomLeft\"] }}\n        style={{ maxWidth: \"max-content\" }}\n        dataSource={users}\n        columns={columns}\n      />\n      <UserCreateUpdateModal\n        type=\"Update\"\n        handleOnSubmit={handleOnSubmit}\n        form={form}\n        visible={visible}\n        SetVisible={SetVisible}\n        emailExists={emailExists}\n        SetExists={SetExists}\n        clearForm={clearForm}\n        isEmailValid={isEmailValid}\n        checkEmail={checkEmail}\n        email={userUpdateEmail}\n      />\n    </div>\n  );\n};\n\nexport default TableComponent;\n","import React from \"react\";\nimport Options from \"./datatable/Options\";\nimport Table from \"./datatable/Table\";\n\nconst Users = () => {\n  return (\n    <div>\n      <Options />\n      <Table />\n    </div>\n  );\n};\n\nexport default Users;\n","import \"./styles.css\";\nimport React from \"react\";\nimport Axios from \"axios\";\nimport { message } from \"antd\";\nimport Context from \"../context\";\nimport Add from \"./Add\";\nimport Users from \"./Users\";\n\nimport { url } from \"../url\";\n\nconst App = () => {\n  const [state, SetState] = React.useState({\n    search: \"\",\n    designation: [],\n    dob: -1,\n    users: [],\n  });\n  React.useEffect(() => {\n    let URL = `${url}/all`;\n    if (state.search) {\n      URL += `/${state.search}`;\n    }\n    if (state.designation.length > 0) {\n      URL += \"?\";\n      state.designation.forEach(\n        (designation) => (URL += `designation=${designation}&`)\n      );\n      URL += `sort=${state.dob === -1 ? \"-\" : \"\"}dob`;\n    } else {\n      URL += `?sort=${state.dob === -1 ? \"-\" : \"\"}dob`;\n    }\n    Axios({ method: \"GET\", url: URL })\n      .then((res) => {\n        if (res.status === 200) {\n          SetState((state) => {\n            return { ...state, users: res.data.users };\n          });\n        }\n      })\n      .catch((err) => message.error(err.message));\n  }, [state.designation, state.dob, state.search]);\n  return (\n    <div id=\"app\">\n      <Context.Provider value={[state, SetState]}>\n        <Add />\n        <Users />\n      </Context.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./components\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}